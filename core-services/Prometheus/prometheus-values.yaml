prometheusOperator:
  enabled: true
  admissionWebhooks:
    enabled: true
  tls:
    enabled: true

prometheus:
  prometheusSpec:
    replicas: 2
    externalLabels:
      cluster: "ve-promtheus-cluster"
      replica: "${REPLICA}"
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: standard-retain
          resources:
            requests:
              storage: 10Gi
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}
    podMonitorNamespaceSelector: {}
    ruleSelectorNilUsesHelmValues: false
    ruleSelector: {}
    ruleNamespaceSelector: {}
    scrapeInterval: 30s
    evaluationInterval: 30s
    retention: 7d
    resources:
      requests:
        memory: 1Gi
        cpu: 500m
      limits:
        memory: 4Gi
        cpu: "2"
    livenessProbe:
      httpGet:
        path: /-/healthy
        port: 9090
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /-/healthy
        port: 9090
      initialDelaySeconds: 5
      periodSeconds: 5
    thanos:
      enabled: true
      version: v0.36.0
      objectStorageConfig:
        key: thanos.yaml
        name: thanos-objstore-config
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 500m
          memory: 512Mi

thanos:
  query:
    enabled: true
    replicaLabel: "replica"
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 1
        memory: 1Gi
    service:
      type: ClusterIP
      port: 9090

alertmanager:
  enabled: true
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: standard-retain
          resources:
            requests:
              storage: 2Gi

grafana:
  persistence:
    enabled: true
    storageClassName: standard-retain
    size: 10Gi
  adminPassword: ChangeMe123!
  serviceMonitor:
    enabled: true
  defaultDashboardsTimezone: UTC-6
  resources:
    requests:
      cpu: 250m
      memory: 750Mi
    limits:
      cpu: 500m
      memory: 1Gi
  pod:
    livenessProbe:
      httpGet:
        path: /api/health
        port: 3000
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /api/health
        port: 3000
      initialDelaySeconds: 5
      periodSeconds: 5

rbac:
  create: true

kubeStateMetrics:
  enabled: true

nodeExporter:
  enabled: true
